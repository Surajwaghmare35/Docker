apiVersion: v1
kind: PersistentVolume
metadata:
  name: host-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: standard
  hostPath:
    path: /tmp
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: host-pvc
spec:
  volumeName: host-pv
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  labels:
    group: webserver
spec:
  selector:
    app: web-server
  ports:
  - port: 8080
    targetPort: 80
    protocol: TCP
  type: LoadBalancer    
  # type: ClusterIP    
  # type: NodePort    

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  labels:
    group: webserver
spec:
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
      - name: nginx-c
        image: nginx
        imagePullPolicy: Always
        
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"

        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /tmp
            name: host-pv
      
      volumes:
        - name: host-pv
          persistentVolumeClaim:
            claimName: host-pvc

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-lb
#   labels:
#     name: ingress-lb
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$1

# spec:
#   ingressClassName: nginx
#   rules:
#   - host: ingress
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/nginx"
#         backend:
#           service:
#             name: nginx-svc
#             port: 
#               number: 8080
